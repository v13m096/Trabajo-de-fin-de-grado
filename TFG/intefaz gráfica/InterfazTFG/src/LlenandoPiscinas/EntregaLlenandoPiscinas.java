/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LlenandoPiscinas;

import AAAALanzador.Documentacion;
import CodigosDeBarras.*;
import AAAALanzador.Problemas;
import static LlenandoPiscinas.EntregaLlenandoPiscinas.filename;
import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author maxxi
 */
public class EntregaLlenandoPiscinas extends javax.swing.JFrame {

    public static String filename;
    public static  int activo=0;
    public static boolean ubuntu=false;
    public static boolean windows=false;
    
    public EntregaLlenandoPiscinas() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelAutores = new javax.swing.JLabel();
        jCheckBoxWindows = new javax.swing.JCheckBox();
        jCheckBoxUbuntu = new javax.swing.JCheckBox();
        jLabelSO = new javax.swing.JLabel();
        jButtonDOCUMENTACION = new javax.swing.JButton();
        jButtonREALIZARENTREGA = new javax.swing.JButton();
        jButtonPATH = new javax.swing.JButton();
        jTextFieldPATH = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaRESULTADO = new javax.swing.JTextArea();
        jButtonPROBLEMAS = new javax.swing.JButton();
        jButtonENUNCIADO = new javax.swing.JButton();
        jButtonEJEMPLOS = new javax.swing.JButton();
        jButtonCREDITOS = new javax.swing.JButton();
        jButtonENVIAR = new javax.swing.JButton();
        jLabelTIEMPO = new javax.swing.JLabel();
        jLabelNOMBRE_EJERCICIO = new javax.swing.JLabel();
        jLabelENCABEZADO = new javax.swing.JLabel();
        jLabelFONDO_IZQ = new javax.swing.JLabel();
        jLabelFONDO = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1030, 600));
        setMinimumSize(new java.awt.Dimension(1030, 600));
        setPreferredSize(new java.awt.Dimension(1030, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelAutores.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelAutores.setText("Seleccione su codigo");
        getContentPane().add(jLabelAutores, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jCheckBoxWindows.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCheckBoxWindows.setText("Windows 10");
        jCheckBoxWindows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxWindowsActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxWindows, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, 160, -1));

        jCheckBoxUbuntu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCheckBoxUbuntu.setText("Ubuntu");
        jCheckBoxUbuntu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxUbuntuActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxUbuntu, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 150, 130, -1));

        jLabelSO.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelSO.setText("Seleccione su sistema operativo");
        getContentPane().add(jLabelSO, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 500, 30));

        jButtonDOCUMENTACION.setBackground(new java.awt.Color(204, 204, 204));
        jButtonDOCUMENTACION.setForeground(new java.awt.Color(0, 153, 153));
        jButtonDOCUMENTACION.setText("Documentación");
        jButtonDOCUMENTACION.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDOCUMENTACIONActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDOCUMENTACION, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 130, 40));

        jButtonREALIZARENTREGA.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonREALIZARENTREGA.setText("Entregar");
        jButtonREALIZARENTREGA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonREALIZARENTREGAActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonREALIZARENTREGA, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 170, 50));

        jButtonPATH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonPATH.setText("Buscar");
        jButtonPATH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPATHActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPATH, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 110, 110, 30));
        getContentPane().add(jTextFieldPATH, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 620, 30));

        jTextAreaRESULTADO.setColumns(20);
        jTextAreaRESULTADO.setRows(5);
        jScrollPane1.setViewportView(jTextAreaRESULTADO);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 990, 290));

        jButtonPROBLEMAS.setBackground(new java.awt.Color(204, 204, 204));
        jButtonPROBLEMAS.setForeground(new java.awt.Color(0, 153, 153));
        jButtonPROBLEMAS.setText("Problemas");
        jButtonPROBLEMAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPROBLEMASActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPROBLEMAS, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 40));

        jButtonENUNCIADO.setText("Enunciado");
        jButtonENUNCIADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonENUNCIADOActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonENUNCIADO, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 120, 40));

        jButtonEJEMPLOS.setText("Ejemplos");
        jButtonEJEMPLOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEJEMPLOSActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEJEMPLOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 130, 40));

        jButtonCREDITOS.setText("Créditos");
        jButtonCREDITOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCREDITOSActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCREDITOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 130, 40));

        jButtonENVIAR.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonENVIAR.setText("Enviar");
        jButtonENVIAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonENVIARActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonENVIAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, 130, 40));

        jLabelTIEMPO.setBackground(new java.awt.Color(0, 153, 153));
        jLabelTIEMPO.setText("Tiempo máximo: 1,000 s                             Memoria máxima: 4096 KiB");
        getContentPane().add(jLabelTIEMPO, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 660, -1));

        jLabelNOMBRE_EJERCICIO.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelNOMBRE_EJERCICIO.setText("LLENANDO PISCINAS");
        getContentPane().add(jLabelNOMBRE_EJERCICIO, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 350, 40));

        jLabelENCABEZADO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/verde oscuro.jpg"))); // NOI18N
        getContentPane().add(jLabelENCABEZADO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 60));

        jLabelFONDO_IZQ.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/verde clarito.jpg"))); // NOI18N
        getContentPane().add(jLabelFONDO_IZQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 770, 60));
        getContentPane().add(jLabelFONDO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 990, 890));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonENVIARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonENVIARActionPerformed
       
       

    }//GEN-LAST:event_jButtonENVIARActionPerformed

    private void jButtonEJEMPLOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEJEMPLOSActionPerformed
        EjemplosLlenandoPiscinas a= new EjemplosLlenandoPiscinas();
        a.setVisible(true);
        this.setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_jButtonEJEMPLOSActionPerformed

    private void jButtonCREDITOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCREDITOSActionPerformed
        // TODO add your handling code here:
         CreditosLlenandoPiscinas a= new CreditosLlenandoPiscinas();
        a.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCREDITOSActionPerformed

    private void jButtonPROBLEMASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPROBLEMASActionPerformed
        // TODO add your handling code here:
        Problemas a= new Problemas();
        a.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonPROBLEMASActionPerformed

    private void jButtonENUNCIADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonENUNCIADOActionPerformed
        // TODO add your handling code here:
        EnunciadoLlenandoPiscinas a= new EnunciadoLlenandoPiscinas();
        a.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonENUNCIADOActionPerformed

    private void jButtonPATHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPATHActionPerformed
        // TODO add your handling code here:
         JFileChooser chooser= new JFileChooser();
        chooser.showOpenDialog(null);
        File f= chooser.getSelectedFile();
        filename=f.getAbsolutePath();
        jTextFieldPATH.setText(filename);
    }//GEN-LAST:event_jButtonPATHActionPerformed

    private void jButtonREALIZARENTREGAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonREALIZARENTREGAActionPerformed
        // TODO add your handling code here:
        //Variables primera prueba
        String[] prueba1= {"10 5 1 15 6 1","50 5 1 50 5 0","50 5 1 50 5 6","0 0 0 0 0 0"};;
        String esperado1="EMPATE 3 VECINO 10 YO 13 ";
        //Variables segunda prueba
        String[] prueba2= {"1000000000 5 1 150000000 6 1","1000000000 5 3 150000000 6 5","1000000000 100 1 150000000 6 5","0 0 0 0 0 0"};
        String esperado2="VECINO 30000000 VECINO 149999995 YO 10101011 ";
        //Variables tercera prueba
        String[] prueba3={"1000000000 5 1 150000000 6 1","1000000000 5 3 150000000 6 5","1000000000 100 1 150000000 6 5","10 5 1 15 6 1","50 5 1 50 5 0","50 5 1 50 5 6","0 0 0 0 0 0"};
        String esperado3="VECINO 30000000 VECINO 149999995 YO 10101011 EMPATE 3 VECINO 10 YO 13 ";
        //Variables cuarta prueba
        String[] prueba4={"1000000000 0 1 150000000 6 1","1000000000 1 0 150000000 6 1","1000000000 1 0 150000000 0 1","1000000000 1 1 150000000 6 0","0 100 1 1 6 5","1 5 3 0 6 5"};;
        String esperado4="VECINO 30000000 VECINO 30000000 YO 1000000000 VECINO 25000000  ";
        //Variables quinta prueba
        String[] prueba5= {"1000000000 0 1 150000000 6 1","1000000000 1 0 150000000 6 1","1000000000 1 0 150000000 0 1","1000000000 1 1 150000000 6 0","1 5 3 0 6 5","200 100 1 1 6 5"};
        String esperadoW5="VECINO 30000000 VECINO 30000000 YO 1000000000 VECINO 25000000  ";
        String esperadoU5="VECINO 30000000 VECINO 30000000 YO 1000000000 VECINO 25000000 ";
        //String esperado2="SI EEUU SI Bulgaria SI Inglaterra SI Irlanda SI Portugal SI Noruega SI Venezuela SI Cuba SI India cipote";
        
        
       
    // PRIMERO COMPROBAMOS QUE EL ALUMNO HAYA SELECCIONADO SU CODIGO    
        if(filename!=null){
            if(windows){
            
            jTextAreaRESULTADO.setText(null);
    // INSTANCIAMOS UN OBJETO DE LA CLASE EJECUTADOR PARA PODER TENER ACCESO A LOS METODOS QUE NECESITAREMOS PARA LAS REALIZAR LAS PRUEBAS        
            EjecutadorLB objeto= new EjecutadorLB();
    // COMPROBAMOS QUE EL CODIGO DEL ALUMNO PUEDA COMPILARSE CORRECTAMENTE        
            
            String compilacion=objeto.compilador(filename);
            jTextAreaRESULTADO.append("----PRUEBA DE CORRECTA COMPILACION DEL CODIGO---"+"\n");
            jTextAreaRESULTADO.append(compilacion+"\n"+"\n");
            
            
            if(compilacion=="Correcto"){
                String resultadoprueba="";
    //PRIMERA PRUEBA
                jTextAreaRESULTADO.append("----PRUEBA CON EL CASO DESCRITO EN EL ENUNCIADO---"+"\n");
                resultadoprueba=RobotWindows(filename,prueba1,esperado1,1000);
    //SI SUPERA LA PRUEBA, SEGUIMOS REALIZANDO PRUEBAS. EN CASO CONTRARIO NO HACE FALTA SEGUIR, EL CODIGO DEL ALUMNO YA ESTA MAL.          
                if(resultadoprueba.equals("Correcto")){
    
    //SEGUNDA PRUEBA
                    
                    jTextAreaRESULTADO.append("----PRUEBA CON PISCINAS EN SUS MAXIMAS CAPACIDADES POSIBLES Y CUBOS DE MINIMAS CAPACIDADES---"+"\n");
                    resultadoprueba=RobotWindows(filename,prueba2,esperado2,1000);
                    if(resultadoprueba.equals("Correcto")){
    //TERCERA PRUEBA
                        jTextAreaRESULTADO.append("----PRUEBA PESADA CON MULTIPLES CASOS DE PRUEBA---"+"\n");
                        resultadoprueba=RobotWindows(filename,prueba3,esperado3,1000);
                        if(resultadoprueba.equals("Correcto")){
    //CUARTA PRUEBA                        
                          jTextAreaRESULTADO.append("----PRUEBA DE TERMINACION CUANDO LA PRIMERA PISCINA NO TIENE CAPACIDAD---"+"\n");
                          resultadoprueba=RobotWindows(filename,prueba4,esperadoW5,1000);
                          if(resultadoprueba.equals("Correcto")){
                                jTextAreaRESULTADO.append("----PRUEBA DE TERMINACION CUANDO LA SEGUNDA PISCINA NO TIENE CAPACIDAD---"+"\n");
                                resultadoprueba=RobotWindows(filename,prueba5,esperadoW5,1000);
                                if(resultadoprueba.equals("Correcto")){
                                    jTextAreaRESULTADO.append("----VEREDICTO FINAL----"+"\n");
                                    jTextAreaRESULTADO.append("Enhorabuena, tu codigo es correcto"+"\n"+"\n");}
                          }
                           
                        }
                      }
                    }
                }
            
        
            }
            else if(ubuntu){
            
            jTextAreaRESULTADO.setText(null);
    // INSTANCIAMOS UN OBJETO DE LA CLASE EJECUTADOR PARA PODER TENER ACCESO A LOS METODOS QUE NECESITAREMOS PARA LAS REALIZAR LAS PRUEBAS        
            EjecutadorLB objeto= new EjecutadorLB();
    // COMPROBAMOS QUE EL CODIGO DEL ALUMNO PUEDA COMPILARSE CORRECTAMENTE        
            
            String compilacion=objeto.compilador(filename);
            jTextAreaRESULTADO.append("----PRUEBA DE CORRECTA COMPILACION DEL CODIGO---"+"\n");
            jTextAreaRESULTADO.append(compilacion+"\n"+"\n");
            
            
            if(compilacion=="Correcto"){
                String resultadoprueba="";
    //PRIMERA PRUEBA
                jTextAreaRESULTADO.append("----PRUEBA CON EL CASO DESCRITO EN EL ENUNCIADO---"+"\n");
                resultadoprueba=RobotUbuntu(filename,prueba1,esperado1,1000);
    //SI SUPERA LA PRUEBA, SEGUIMOS REALIZANDO PRUEBAS. EN CASO CONTRARIO NO HACE FALTA SEGUIR, EL CODIGO DEL ALUMNO YA ESTA MAL.          
                if(resultadoprueba.equals("Correcto")){
    
    //SEGUNDA PRUEBA
                    
                    jTextAreaRESULTADO.append("----PRUEBA CON PISCINAS EN SUS MAXIMAS CAPACIDADES POSIBLES Y CUBOS DE MINIMAS CAPACIDADES---"+"\n");
                    resultadoprueba=RobotUbuntu(filename,prueba2,esperado2,1000);
                    if(resultadoprueba.equals("Correcto")){
    //TERCERA PRUEBA
                        jTextAreaRESULTADO.append("----PRUEBA PESADA CON MULTIPLES CASOS DE PRUEBA---"+"\n");
                        resultadoprueba=RobotUbuntu(filename,prueba3,esperado3,1000);
                        if(resultadoprueba.equals("Correcto")){
    //CUARTA PRUEBA                        
                          jTextAreaRESULTADO.append("----PRUEBA DE TERMINACION CUANDO LA PRIMERA PISCINA NO TIENE CAPACIDAD---"+"\n");
                          resultadoprueba=RobotUbuntu(filename,prueba4,esperadoU5,1000);
                          if(resultadoprueba.equals("Correcto")){
                                jTextAreaRESULTADO.append("----PRUEBA DE TERMINACION CUANDO LA SEGUNDA PISCINA NO TIENE CAPACIDAD---"+"\n");
                                resultadoprueba=RobotUbuntu(filename,prueba5,esperadoU5,1000);
                                if(resultadoprueba.equals("Correcto")){
                                    jTextAreaRESULTADO.append("----VEREDICTO FINAL----"+"\n");
                                    jTextAreaRESULTADO.append("Enhorabuena, tu codigo es correcto"+"\n"+"\n");}
                          }
                           
                        }
                      }
                    }
                }
            
        
            }
            else{
                jTextAreaRESULTADO.append("----VEREDICTO FINAL----"+"\n");    
                jTextAreaRESULTADO.append("Aun no has seleccionado ningun sistema operativo"+"\n"+"\n");
            }
            
            }
             
        else{
        jTextAreaRESULTADO.append("----VEREDICTO FINAL----"+"\n");    
        jTextAreaRESULTADO.append("Aun no has seleccionado ningun archivo"+"\n"+"\n");}
    }//GEN-LAST:event_jButtonREALIZARENTREGAActionPerformed

    private void jCheckBoxUbuntuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxUbuntuActionPerformed
        // TODO add your handling code here:
        ubuntu=true;
    }//GEN-LAST:event_jCheckBoxUbuntuActionPerformed

    private void jCheckBoxWindowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWindowsActionPerformed
        // TODO add your handling code here:
        windows=true;
    }//GEN-LAST:event_jCheckBoxWindowsActionPerformed

    private void jButtonDOCUMENTACIONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDOCUMENTACIONActionPerformed
        // TODO add your handling code here:
        Documentacion a= new Documentacion();
        a.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonDOCUMENTACIONActionPerformed
    private String RobotWindows(String ruta,String[] prueba,String esperado, int time){
        String resultado="error";
        String resultadoprueba="";
        EjecutadorLB objeto= new EjecutadorLB();
        resultadoprueba=objeto.runFileWindows(ruta,prueba,time);
                
                if(resultadoprueba.equals(esperado)){  
                  jTextAreaRESULTADO.append("Correcto"+"\n"+"\n");
                  resultado="Correcto";
    
               }
                else if (resultadoprueba.equals("Tiempo limite excedido")){
                    objeto.matarHijosWindows();
                    jTextAreaRESULTADO.append("Tiempo limite excedido"+"\n"+"\n");
                    jTextAreaRESULTADO.append("----VEREDICTO FINAL---"+"\n");
                    jTextAreaRESULTADO.append("Tu codigo no es correcto"+"\n"+"\n");
                    
                }
                else if (resultadoprueba.equals("Bucle")){
                    objeto.matarHijosWindows();
                    jTextAreaRESULTADO.append("Bucle"+"\n"+"\n");
                    jTextAreaRESULTADO.append("----VEREDICTO FINAL---"+"\n");
                    jTextAreaRESULTADO.append("Tu codigo no es correcto"+"\n"+"\n");
                    
                }
                else{
                    
                    
                    jTextAreaRESULTADO.append("Resultado incorrecto"+"\n"+"\n");
                    jTextAreaRESULTADO.append("----VEREDICTO FINAL---"+"\n");
                    jTextAreaRESULTADO.append("Tu codigo no es correcto"+"\n"+"\n");
                }
        return resultado;
    }
    private String RobotUbuntu(String ruta,String[] prueba,String esperado, int time){
        String resultado="error";
        String resultadoprueba="";
        EjecutadorLB objeto= new EjecutadorLB();
        resultadoprueba=objeto.runFileUbuntu(ruta,prueba,time);
                
                if(resultadoprueba.equals(esperado)){  
                  jTextAreaRESULTADO.append("Correcto"+"\n"+"\n");
                  resultado="Correcto";
    
               }
                else if (resultadoprueba.equals("Tiempo limite excedido")){
                    
                    jTextAreaRESULTADO.append("Tiempo limite excedido"+"\n"+"\n");
                    jTextAreaRESULTADO.append("----VEREDICTO FINAL---"+"\n");
                    jTextAreaRESULTADO.append("Tu codigo no es correcto"+"\n"+"\n");
                    
                }
                else if (resultadoprueba.equals("Bucle")){
                    jTextAreaRESULTADO.append("Bucle"+"\n"+"\n");
                    jTextAreaRESULTADO.append("----VEREDICTO FINAL---"+"\n");
                    jTextAreaRESULTADO.append("Tu codigo no es correcto"+"\n"+"\n");
                    
                }
                else{
                    
                    
                    jTextAreaRESULTADO.append("Resultado incorrecto"+"\n"+"\n");
                    jTextAreaRESULTADO.append("----VEREDICTO FINAL---"+"\n");
                    jTextAreaRESULTADO.append("Tu codigo no es correcto"+"\n"+"\n");
                }
        return resultado;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntregaLlenandoPiscinas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntregaLlenandoPiscinas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntregaLlenandoPiscinas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntregaLlenandoPiscinas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EntregaLlenandoPiscinas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCREDITOS;
    private javax.swing.JButton jButtonDOCUMENTACION;
    private javax.swing.JButton jButtonEJEMPLOS;
    private javax.swing.JButton jButtonENUNCIADO;
    private javax.swing.JButton jButtonENVIAR;
    private javax.swing.JButton jButtonPATH;
    private javax.swing.JButton jButtonPROBLEMAS;
    private javax.swing.JButton jButtonREALIZARENTREGA;
    private javax.swing.JCheckBox jCheckBoxUbuntu;
    private javax.swing.JCheckBox jCheckBoxWindows;
    private javax.swing.JLabel jLabelAutores;
    private javax.swing.JLabel jLabelENCABEZADO;
    private javax.swing.JLabel jLabelFONDO;
    private javax.swing.JLabel jLabelFONDO_IZQ;
    private javax.swing.JLabel jLabelNOMBRE_EJERCICIO;
    private javax.swing.JLabel jLabelSO;
    private javax.swing.JLabel jLabelTIEMPO;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaRESULTADO;
    private javax.swing.JTextField jTextFieldPATH;
    // End of variables declaration//GEN-END:variables
}
